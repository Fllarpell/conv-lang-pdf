324
FILE SYSTEMS
CHAP. 4
4.5 EXAMPLE FILE SYSTEMS
In the following sections, we will discuss several example file systems, ranging
from quite simple to more sophisticated. Since modern UNIX file systems and
Windowsâ€™s native file system are covered in the chapter on UNIX (Chap. 10) and
the chapter on Windows (Chap. 11), we will not cover those systems here. We
will, however, examine their predecessors below. As we hav e mentioned before,
variants of the MS-DOS file system are still in use in digital cameras, portable
music players, electronic picture frames, USB sticks, and other devices, so 
studying them is definitely still relevant.
4.5.1 The MS-DOS File System
The MS-DOS file system is the one the first IBM PCs came with. It was the
main file system up through Windows 98 and Windows ME. It is still supported
on Windows 10 and Windows 11. However, it and an extension of it (FAT -32)
have become widely used for many embedded systems. Most digital cameras use
it. Many MP3 players use it exclusively. Electronic picture frames use it. Some
memory cards use it. Many other simple devices that store music, images, and so
on still use it. It is still the preferred file system for disks and other devices that
need to be read by both Windows and MacOS. Thus, the number of electronic
devices using the MS-DOS file system is vastly larger now than at any time in the
past, and certainly much larger than the number using the more modern NTFS file
system. For that reason alone, it is worth looking at in some detail.
To read a file, an MS-DOS program must first make an open system call to get
a handle for it. The open system call specifies a path, which may be either absolute
or relative to the current working directory. The path is looked up component by
component until the final directory is located and read into memory. It is then
searched for the file to be opened.
Although MS-DOS directories are variable sized, they use a fixed-size 32-byte
directory entry. The format of an MS-DOS directory entry is shown in Fig. 4-32. It
contains the file name, attributes, creation date and time, starting block, and exact
file size. File names shorter than 8 + 3 characters are left justified and padded with
spaces on the right, in each field separately. The Attributes field is new and 
contains bits to indicate that a file is read-only, needs to be archived, is hidden, or is a
system file. Read-only files cannot be written. This is to protect them from 
accidental damage. The archived bit has no actual operating system function (i.e., 
MSDOS does not examine or set it). The intention is to allow user-level archive 
programs to clear it upon archiving a file and to have other programs set it when 
modifying a file. In this way, a backup program can just examine this attribute bit on
ev ery file to see which files to back up. The hidden bit can be set to prevent a file
from appearing in directory listings. Its main use is to avoid confusing novice users
with files they might not understand. Finally, the system bit also hides files. In
