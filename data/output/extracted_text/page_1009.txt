980
CASE STUDY 2: WINDOWS 11
CHAP. 11
fundamentally asynchronous structure that allows computation to overlap with I/O
transfers. There are many hundreds of thousands of devices that work with 
Windows. For a large number of common devices, it is not even necessary to install a
driver, because there is already a driver that shipped with the Windows operating
system. But even so, counting all the revisions, there are almost a million distinct
driver binaries that run on Windows. In the following sections, we will examine
some of the issues relating to I/O.
11.7.1 Fundamental Concepts
The I/O manager is on intimate terms with the plug-and-play manager. The
basic idea behind plug and play is that of an enumerable bus. Many buses, 
including PC Card, PCI, PCIe, AGP, USB, IEEE 1394, EIDE, SCSI, and SATA, hav e
been designed so that the plug-and-play manager can send a request to each slot
and ask the device there to identify itself. Having discovered what is out there, the
plug-and-play manager allocates hardware resources, such as interrupt levels,
locates the appropriate drivers, and loads them into memory. As each driver is
loaded, a driver object is created for it. And then for each device, at least one 
device object is allocated. For some buses, such as SCSI, enumeration happens only
at boot time, but for other buses, such as USB, it can happen at any time, requiring
close cooperation between the plug-and-play manager, the bus drivers (which 
actually do the enumerating), and the I/O manager.
In Windows, all the file systems, antivirus filters, volume managers, network
protocol stacks, and even kernel services that have no associated hardware are
implemented using I/O drivers. The system configuration must be set to cause
some of these drivers to load, because there is no associated device to enumerate
on the bus. Others, like the file systems, are loaded by special code that detects
they are needed, such as the file-system recognizer that looks at a raw volume and
deciphers what type of file system format it contains.
An interesting feature of Windows is its support for dynamic disks. These
disks may span multiple partitions and even multiple disks and may be 
reconfigured on the fly, without even having to reboot. In this way, logical volumes are no
longer constrained to a single partition or even a single disk so that a single file
system may span multiple drives in a transparent way. This property turned out to
be difficult to support for software since a disk typically contains multiple 
partitions and thus multiple volumes, but with dynamic disks, a volume can span 
multiple disks and the underlying disks are individually visible to software as well,
potentially causing confusion.
Starting with Windows 10, dynamic disks were effectively superseded by 
storage spaces, a  new feature that provides virtualization of physical storage hardware.
With storage spaces, a user can create virtual disks backed by potentially different
underlying disk media, called the storage pool. The point is that these virtual
disks are presented to the system as being actual disk device objects (as opposed to
