776
CASE STUDY 1: UNIX, LINUX, AND ANDROID 
CHAP. 10
The Linux Ext2 File System
We next describe one of the earlier on-disk file systems used in Linux: ext2.
The first Linux release used the MINIX 1 file system and was limited by short file
names (chosen for UNIX V7 compatibility) and 64-MB file sizes. The MINIX 1
file system was eventually replaced by the first extended file system, ext, which
permitted both longer file names and larger file sizes. Due to its performance 
inefficiencies, ext was replaced by its successor, ext2, which reached widespread use.
An ext2 Linux disk partition contains a file system with the layout shown in
Fig. 10-31. Block 0 is not used by Linux and contains code to boot the computer.
Following block 0, the disk partition is divided into groups of blocks, irrespective
of where the disk cylinder boundaries fall. Each group is organized as follows.
The first block is the superblock. It contains information about the layout of
the file system, including the number of i-nodes, the number of disk blocks, and
the start of the list of free disk blocks (typically a few hundred entries). Next
comes the group descriptor, which contains information about the location of the
bitmaps, the number of free blocks and i-nodes in the group, and the number of
directories in the group. This information is important since ext2 attempts to
spread directories evenly over the disk.
Boot
Block group 0
Super–    Group!
block     descriptor
Block group 1
Block!
bitmap
Data!
blocks
I–node!
bitmap
I–nodes
Block group 2
Block group 3
Block group 4
...
Figure 10-31. Disk layout of the Linux ext2 file system.
Tw o bitmaps are used to keep track of the free blocks and free i-nodes, 
respectively, a choice inherited from the MINIX 1 file system (and in contrast to most
UNIX file systems, which use a free list). Each map is one block long. With a
1-KB block, this design limits a block group to 8192 blocks and 8192 i-nodes. The
former is a real restriction but, in practice, the latter is not. With 4-KB blocks, the
numbers are four times larger.
Following the superblock are the i-nodes themselves. They are numbered from
1 up to some maximum. Each i-node is 128 bytes long and describes exactly one
file. An i-node contains accounting information (including all the information
returned by stat, which simply takes it from the i-node), as well as enough 
information to locate all the disk blocks that hold the file’s data.
Following the i-nodes are the data blocks. All the files and directories are 
stored here. If a file or directory consists of more than one block, the blocks need not
